sp <- spatialDistribution(out1)
out$drivers
out$muts[13,]
out$muts[14,]
out$muts[15,]
getwd()
library(devtools)
use_build_ignore("todo.rtf")
devtools::testthat()
testthat()
use_testthat()
test()
devtools::test()
getwd()
usethis::use_test("my_first_test")
test()
test()
usethis::use_test("simulation_check")
library(TumorGenerator)
simulate_tumor()
?simulate_tumor
test()
test()
runif(1, 250000000)
runif(1, 1, 250000000)
set.seed(116776544)
out <- simulateTumor(N = 100, verbose = F)
nrow(out)
nrow(out$cell_ids)
out$drivers
mean(out$nrow(x))
mean(out$alleles)
mean(out$cell_ids$nmuts)
set.seed(116776544)
out <- simulateTumor(N = 100, verbose = F, du = 0.1)
out$drivers
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
out$drivers
mean(out$cell_ids$nmuts)
nrow(out$muts)
out$muts$MAF[5]
out$muts$MAF[4]
test()
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
nrow(out$drivers)
length(out$drivers)
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
length(out$drivers)
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(length(out$drivers))
test()
test()
test()
test()
out <- simulateTumor
out <- simulateTumor()
bulks <- randomBulkSamples(tumor = out, nsamples = 5)
bulks <- randomBulkSamples(tumor = out, nsamples = 5)
bulks <- randomBulkSamples(tumor = out, nsamples = 5)
bulks <- randomBulkSamples(tumor = out, nsamples = 5)
bulks <- randomBulkSamples(tumor = out, nsamples = 5)
bulks <- randomBulkSamples(tumor = out, nsamples = 5)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1)
bulks <- randomBulkSamples(tumor = out, nsamples = 1, cube_length = 7)
bulks <- randomBulkSamples(tumor = out, nsamples = 1, cube_length = 7)
bulks <- randomBulkSamples(tumor = out, nsamples = 1, cube_length = 7)
bulks <- randomBulkSamples(tumor = out, nsamples = 1, cube_length = 7)
bulks <- randomBulkSamples(tumor = out, nsamples = 1, cube_length = 7)
bulks <- randomBulkSamples(tumor = out, nsamples = 2, cube_length = 7)
View(bulks)
sp <- spatialDistribution(tumor = out)
bulk <- bulkSample(tumor = out, pos = c(0,0,0))
View(bulk)
out$muts$MAF[57,]
out$muts[57,]
out$muts["239",]
out$phylo_tree[238,]
out$phylo_tree[34272,]
out$phylo_tree[27472,]
out$phylo_tree["1482",]
simulate_tumor()
input <- list()
input$params <- c(10, 0.25, 0.23, 0.01, 0.001, FALSE)
simulate_tumor(input)
Rcpp::compileAttributes()
library(TumorGenerator)
out <- simulateTumor()
test()
library(TumorGenerator)
detach("package:TumorGenerator", unload = TRUE)
library(TumorGenerator)
simulateTumor()
?simulateTumor
?simulateTumor
out <- simulateTumor()
out <- simulateTumor(d = 0.23)
plotSlice(out)
dev.off()
plotSlice(out)
plotSlice(out, plot.type = "heat")
visualizeTumor(out)
visualizeTumor(out, plot.type = "heat")
?TumorGenerator
out$alleles
simulateTumor <- function(N = 250000, b = 0.25, d = 0.18, u = 0.01, du = 0.003, s = 1.05, verbose = TRUE) {
input <- list()
input$params <- c(N, b, d, u, du, s, verbose)
tumor <- simulate_tumor(input)
out <- list()
out$cell_ids <- data.frame(tumor[[1]])
colnames(out$cell_ids) <- c("x", "y", "z", "allele", "nmuts", "distance")
out$alleles <- data.frame(tumor[[2]]); nc <- ncol(out$alleles)
colnames(out$alleles)[ncol(out$alleles)] <- "count"
df <-  as.data.frame(tumor[[3]])
ix <- as.data.frame(0:(nrow(df)-1))
out$muts <- cbind(ix, df[,1], df[,1]/N)
colnames(out$muts) <- c("id", "count", "MAF")
out$phylo_tree <- as.data.frame(tumor[[4]])
colnames(out$phylo_tree) <- c("parent", "child")
color_scheme_mat <- tumor[[5]]
out$color_scheme <- apply(color_scheme_mat, 2, function(x) {
return(rgb(x[1],x[2],x[3],1))
})
out$drivers <- tumor[[7]]
out$params <- input$params
return(out)
}
out <- simulateTumor()
Rcpp::compileAttributes()
out <- simulateTumor()
out <- simulateTumor()
out$alleles
test()
roxygenis()
roxygenise()
?simulateTumor
Rcpp::compileAttributes()
library(tumorGenerator)
library(TumorGenerator)
test()
out <- simulateTumor(N = 10000)
out$time
roxygenise()
?simulateTumor
roxygenise()
?simulateTumor
?TumorGenerator
?TumorGenerator
install.packages("CloneSeeker")
?CloneSeeker
library(CloneSeeker)
?CloneSeeker
?simulateTumor
roxygenise()
?spatialDistribution
roxygenise()
?spatialDistribution
roxygenise()
?spatialDistribution
visualizeTumor(plot.type = "N")
visualizeTumor(out, plot.type = "N")
roxygenise()
?visualizeTumor
?visualizeTumor
roxygenise()
?visualizeTumor
roxygenise()
?visualizeTumor
roxygenise()
?plotSlice
?plotSlice
?CloneSeeker
?stats
library(TumorGenerator)
out <- simulateTumor(N = 1000000, d = 0.2, s = 1.05)
nrow(out$muts)
plotSlice(out, plot.type = "heat")
scs <- randomSingleCells(tumor = out, ncells = 20)
View(scs)
View(scs, noise = 0.2)
scs <- randomSingleCells(tumor = out, ncells = 20, noise = 0.2)
View(scs)
sp <- spatialDistribution(out)
View(scs)
out$phylo_tree[1150,]
out$phylo_tree[91820,]
#' Quantify the spatial distribution of mutants
#'
#' @param tumor The output of \link[TumorGenerator]{simulateTumor}.
#' @return The sum of \code{x} and \code{y}.
spatialDistribution <- function(tumor, N = 500, cutoff = 0.01, make.plot = TRUE) {
out <- list()
#First do mean number of mutants by distance
#round first to get integers
tumor$cell_ids$distances <- round(tumor$cell_ids$distance)
vals <- c(0:max(tumor$cell_ids$distance))
mean_mutant <- as.data.frame(sapply(vals, function(x) {
return(mean(tumor$cell_ids[tumor$cell_ids$distance == x,5]))
}))
vals <- as.data.frame(vals)
out$mean_mutant <- cbind(vals, mean_mutant)
colnames(out$mean_mutant) <- c("Distance", "Mean # mutations")
#Repeat process for drivers
if(length(out$drivers) > 0) {
driver_ids <- tumor$cell_ids[which(tumor$cell_ids$allele %in% tumor$drivers),]
vals <- c(0:max(driver_ids$distance))
mean_driver <- as.data.frame(sapply(vals, function(x) {
return(nrow(driver_ids[driver_ids$distance == x,])/nrow(tumor$cell_ids[tumor$cell_ids$distance == x,]) )
}))
vals <- as.data.frame(vals)
out$mean_driver <- cbind(vals, mean_driver)
colnames(out$mean_driver) <- c("Distance", "Mean # drivers")
}
#Now do jaccard similarity
jaccard_mat <- matrix(0, nrow = N, ncol = 2)
for(i in 1:N) {
s <- sample(1:nrow(tumor$cell_ids), 2, replace = F)
dist <- (tumor$cell_ids$x[s[1]] - tumor$cell_ids$x[s[2]])^2 + (tumor$cell_ids$y[s[1]] - tumor$cell_ids$y[s[2]])^2
dist <- dist + (tumor$cell_ids$z[s[1]] - tumor$cell_ids$z[s[2]])^2
dist <- sqrt(dist)
allele1 <- tumor$cell_ids$allele[s[1]] + 1
allele2 <- tumor$cell_ids$allele[s[2]] + 1
row1 <- tumor$alleles[allele1,-ncol(tumor$alleles)]
row2 <- tumor$alleles[allele2,-ncol(tumor$alleles)]
v1 <- row1[row1 != -1]
v2 <- row2[row2 != -1]
jaccard_mat[i,1] <- round(dist)
jaccard_mat[i,2] <- length(intersect(v1, v2))/length(union(v1,v2))
}
vals <- c(0:max(jaccard_mat[,1]))
mean_jaccard <- as.data.frame(sapply(vals, function(x) {
return(mean(jaccard_mat[jaccard_mat[,1] == x,2]))
}))
vals <- as.data.frame(vals)
out$jaccard <- cbind(vals, mean_jaccard)
colnames(out$jaccard) <- c("Distance", "Mean jaccard index")
if(make.plot) {make_plot(out, tumor, cutoff)}
return(out)
}
make_plot <- function(out.spatial, tumor, cutoff) {
par(mfrow=c(2,2))
plot(out.spatial$mean_mutant[,1], out.spatial$mean_mutant[,2], pch = 4, col = "blue", xlab = "Euclid. distance from origin",
ylab = "Mean # of mutants per cell", main = "Mutations per cell")
hist(tumor$cell_ids$nmuts, breaks = 0:max(tumor$cell_ids$nmuts), main = "Histogram of mutations per cell",
xlab = "Number of mutations")
plot(out.spatial$jaccard[,1], out.spatial$jaccard[,2], pch = 16, col = "red", main = "Jaccard index comparison",
xlab = "Euclid. distance between cells", ylab = "Jaccard index")
tumor$muts <- tumor$muts[order(tumor$muts$MAF, decreasing = T),]; tumor$muts <- tumor$muts[tumor$muts$MAF > cutoff,]
plot(1:length(tumor$muts$MAF), tumor$muts$MAF, pch = 16, col = "green", xlab = "k-th largest clone",
ylab = "Mutation allele frequency", main = "Clone sizes")
}
out <- simulateTumor(N = 100, du = 0.0)
sp <- spatialDistribution(out)
length(out$muts)
out$muts
sp$mean_mutant
out <- simulateTumor(N = 100, du = 1.0)
out$drivers
out$muts
out$muts
out <- simulateTumor(N = 100, du = 1.0)
out$muts
out$drivers
out <- simulateTumor(N = 100, du = 0.99)
out$drivers
out$muts
out <- simulateTumor(N = 100, du = 0.99)
out$muts
out$drivers
Rcpp::compileAttributes()
library(TumorGenerator)
out <- simulateTumor(N = 100, du = 1.0)
out$muts
out <- simulateTumor(N = 100, du = 1.0)
out <- simulateTumor(N = 100, du = 1.0)
out <- simulateTumor(N = 100, du = 1.0)
out <- simulateTumor(N = 100, du = 1.0)
out <- simulateTumor(N = 100, du = 1.0)
out <- simulateTumor(N = 200, du = 1.0)
out <- simulateTumor(N = 200, du = 1.0)
out <- simulateTumor(N = 200, du = 1.0)
out$drivers
out <- simulateTumor(N = 300, du = 1.0)
out$drivers
out <- simulateTumor(N = 400, du = 1.0)
out <- simulateTumor(N = 1000, du = 1.0)
out$drivers
out <- simulateTumor(N = 10000, du = 1.0)
out <- simulateTumor(N = 100000, du = 1.0)
out$drivers
Rcpp::compileAttributes()
library(TumorGenerator)
out <- simulateTumor(N = 500)
out <- simulateTumor(N = 100, du = 1.0)
out$drivers
Rcpp::compileAttributes()
out <- simulateTumor(N = 100, du = 0.9)
out <- simulateTumor(N = 100, du = 1.00)
out <- simulateTumor(N = 100, du = 1.00)
Rcpp::compileAttributes()
library(TumorGenerator)
out <- simulateTumor(N = 50, du = 1.0)
Rcpp::compileAttributes()
out <- simulateTumor(N = 50)
out <- simulateTumor(N = 50, du = 1.0)
out <- simulateTumor(N = 50, du = 1.0)
out$muts
out$drivers
out$drivers
Rcpp::compileAttributes()
library(TumorGenerator)
out <- simulateTumor(N = 1000)
out$drivers
out <- simulateTumor(N = 10000)
out$drivers
Rcpp::compileAttributes()
out <- simulateTumor(N = 500, du = 1.0)
out$drivers
length(out$drivers)
nrow(out$muts)
out <- simulateTumor()
out$drivers
length(out$drivers)
plotSlice(out)
dev.off()
dev.off()
plotSlice(out)
plotSlice(out, plot.type = "heat")
sp <- spatialDistribution(out)
nrow(out$muts)
test()
library(devtools)
test()
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$muts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[4])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.1)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[4])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.2)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[4])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.2)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[4])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.5)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[4])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.5)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[3])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.5)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[5])
test()
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.5)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[5])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.5)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[5])
set.seed(116776544)
out <- simulateTumor(N = 200, verbose = F, du = 0.5)
print(nrow(out$cell_ids))
print(mean(out$cell_ids$nmuts))
print(length(out$drivers))
print(nrow(out$muts))
print(out$muts$MAF[5])
test()
test()
test()
test()
test()
test()
test()
test()
test()
test()
test()
test()
nrow(out$muts)
out <- simulateTumor()
nrow(out$muts)
length(out$drivers)
79448*0.03
79448*0.003
visualizeTumor(out)
sp <- spatialDistribution(out)
?simulateTumor
test()
simulateTumor()
plotSlice(out, plot.type = "heat")
dev.off()
plotSlice(out, plot.type = "heat")
plotSlice(out, plot.type = "heat", level = 10)
plotSlice(out, plot.type = "heat", level = 20)
visualizeTumor(out, plot.type = "heat")
plotSlice(out, plot.type = "heat", level = 20)
plotSlice(out, plot.type = "heat", level = 26)
plotSlice(out, plot.type = "heat", level = 40)
plotSlice(out, plot.type = "heat", level = 60)
plotSlice(out, plot.type = "heat", level = 50)
plotSlice(out, plot.type = "heat", level = 51)
plotSlice(out, plot.type = "heat", level = 52)
plotSlice(out, plot.type = "heat", level = 53)
plotSlice(out, plot.type = "heat", level = 52)
plotSlice(out, plot.type = "heat", level = 30)
nrow(out$cell_ids)
sp <- spatialDistribution(otu)
sp <- spatialDistribution(out)
dev.off()
out <- simulateTumor(N = 1000000)
plotSlice(out)
plotSlice(out, plot.type = "heat")
out$alleles
nrow(out$muts)
plotSlice(out, level = 52)
plotSlice(out, level = 52, plot.type = "heat")
plotSlice(out, level = 53, plot.type = "heat")
plotSlice(out, level = 54, plot.type = "heat")
plotSlice(out, level = 60, plot.type = "heat")
plotSlice(out, plot.type = "heat", level = 65)
plotSlice(out, plot.type = "heat", level = 66)
plotSlice(out, plot.type = "heat", level = 70)
plotSlice(out, plot.type = "heat", level = 71)
plotSlice(out, plot.type = "heat", level = 7)
plotSlice(out, plot.type = "heat", level = 72)
plotSlice(out, plot.type = "heat", level = 73)
plotSlice(out, plot.type = "heat", level = 74)
out <- simulateTumor(N = 10000000)
nrow(out$muts)
visualizeTumor(out)
plotSlice(out, plot.type = "heat")
rm(out)
